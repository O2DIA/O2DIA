\name{Plotting functions}
\alias{image2D.O2DIAdyn}
\alias{matplot1D}
\alias{matplot1D.default}
\alias{matplot1D.O2DIAdyn}
\alias{matplot1D,default-method}
\alias{matplot1D,O2DIAdyn-method}
\alias{plot.O2DIAstd} 

\title{
  Utility functions for plotting O2DIA dynamic or steady-state model output.
}
\description{

  \code{image2D} generates a 2-D image (x=time, y=depth) of the dynamic output.
  
  \code{matplot1D} plots how profiles change with time. These plots will have the depth on the y-axis, and will plot all profiles.

  \code{plot} plots steady-state profiles, with the depth on the y-axis.
}


\usage{

\method{image2D}{O2DIAdyn}(z, which, ylim = NULL, \dots, 
   colkey = list(cex.clab = 0.8, line.clab = 0.5, cex.axis = 0.8)) 

\method{matplot1D}{default}(z, \dots) 

\method{matplot1D}{O2DIAdyn}(z, which, ylim = NULL, 
  type = "l", col = "grey",  lty = 1, \dots) 

matplot1D (z, \dots) 


\method{plot}{O2DIAstd}(x, \dots, which, ylim = NULL) 

}
\arguments{

  \item{z}{ object of class \code{O2DIAdyn}  generated by \link{O2DIAdyna}.   
  }  
  \item{x}{ object of class \code{O2DIAstd}  generated by \link{O2DIAsteady}.   
  }  
  \item{which}{ The name(s) of the 1-dimensional output to be plotted versus time.
  }
  \item{ylim}{ The ranges of the y-axis. Default is to have the y-axis extend downward, over the depth of the domain.
  }
  \item{colkey}{ A list with specifications of the color key. The default is to have a smaller  title (\code{cex.clab}) and axis labels (\code{cex.axis}), the key title positioned close to the color key (\code{line.clab}), See \link[plot3D]{colkey}
  }
  \item{type, col, lty}{ The type of plot, the color and type of the lines used for plotting
  }
  \item{...}{ Any argument passed to the functions \link[plot3D]{image2D} and \link[deSolve]{matplot.1D} .
  }
}


\author{
  Karline Soetaert
}


\examples{

# ============
# Dynamic 
# ============
  out <- O2DIAdyna(times = 0:365,
                   Temperature = function(t) 20 + 10*sin(2*pi*t/365))
  
  image2D(out, 
          which = c("O2", "ODU"), 
          ylim = c(0.005, 0), 
          mfrow = c(2,2), las = 1)
  
  plot(out, 
       which = c("O2SWIflux", "Temperature"),
       mfrow = NULL, las = 1)
          
  matplot1D(out, 
            which = "O2", 
            col = "grey") 


# ============
# Steady 
# ============

# plot one set of profiles
plot(O2DIAsteady(), 
     which = 1:2)
     
# plot two sets of profiles
plot(O2DIAsteady(), O2DIAsteady(Temperature = 20), 
     which = 1:2,
     lty = 1)

}
\keyword{ utilities }
